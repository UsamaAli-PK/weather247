# Generated by Django 5.2.5 on 2025-08-12 19:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='User-defined name for the route', max_length=200)),
                ('start_location', models.CharField(help_text='Starting location', max_length=200)),
                ('end_location', models.CharField(help_text='Destination location', max_length=200)),
                ('start_latitude', models.FloatField()),
                ('start_longitude', models.FloatField()),
                ('end_latitude', models.FloatField()),
                ('end_longitude', models.FloatField()),
                ('waypoints', models.JSONField(default=list, help_text='List of waypoints with lat/lon coordinates')),
                ('distance_km', models.FloatField(blank=True, help_text='Total route distance in kilometers', null=True)),
                ('estimated_duration_minutes', models.IntegerField(blank=True, help_text='Estimated travel time in minutes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RouteAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('rain', 'Rain'), ('snow', 'Snow'), ('fog', 'Fog'), ('wind', 'High Wind'), ('temperature', 'Extreme Temperature'), ('storm', 'Storm'), ('ice', 'Ice/Freezing')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('severe', 'Severe')], default='medium', max_length=10)),
                ('location_latitude', models.FloatField()),
                ('location_longitude', models.FloatField()),
                ('location_name', models.CharField(blank=True, max_length=200)),
                ('distance_from_start_km', models.FloatField()),
                ('message', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='route_planner.route')),
            ],
            options={
                'ordering': ['distance_from_start_km', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RouteWeatherPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('location_name', models.CharField(blank=True, max_length=200)),
                ('distance_from_start_km', models.FloatField(help_text='Distance from route start in kilometers')),
                ('temperature', models.FloatField(help_text='Temperature in Celsius')),
                ('humidity', models.IntegerField(help_text='Humidity percentage')),
                ('wind_speed', models.FloatField(help_text='Wind speed in km/h')),
                ('weather_condition', models.CharField(max_length=50)),
                ('weather_description', models.CharField(max_length=100)),
                ('weather_icon', models.CharField(max_length=10)),
                ('precipitation_probability', models.FloatField(default=0, help_text='Precipitation probability (0-1)')),
                ('visibility', models.FloatField(blank=True, help_text='Visibility in km', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_points', to='route_planner.route')),
            ],
            options={
                'ordering': ['distance_from_start_km'],
            },
        ),
        migrations.CreateModel(
            name='TravelPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_departure', models.DateTimeField()),
                ('planned_arrival', models.DateTimeField()),
                ('vehicle_type', models.CharField(default='car', help_text='Type of vehicle (car, motorcycle, bicycle, walking)', max_length=50)),
                ('weather_preferences', models.JSONField(default=dict, help_text='User preferences for weather conditions')),
                ('alternative_routes', models.JSONField(default=list, help_text='Alternative route suggestions')),
                ('weather_warnings', models.JSONField(default=list, help_text='Weather-related warnings for the journey')),
                ('recommended_departure_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_plans', to='route_planner.route')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
