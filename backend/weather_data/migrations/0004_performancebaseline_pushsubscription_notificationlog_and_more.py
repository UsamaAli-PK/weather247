# Generated by Django 5.2.5 on 2025-08-14 18:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('weather_data', '0003_add_api_management_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceBaseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(max_length=50)),
                ('component', models.CharField(max_length=50)),
                ('baseline_value', models.FloatField()),
                ('warning_threshold', models.FloatField()),
                ('critical_threshold', models.FloatField()),
                ('min_value', models.FloatField()),
                ('max_value', models.FloatField()),
                ('avg_value', models.FloatField()),
                ('std_deviation', models.FloatField(default=0)),
                ('sample_size', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'performance_baselines',
                'indexes': [models.Index(fields=['metric_type', 'component'], name='performance_metric__0eb0c9_idx'), models.Index(fields=['last_updated'], name='performance_last_up_72804b_idx')],
                'unique_together': {('metric_type', 'component')},
            },
        ),
        migrations.CreateModel(
            name='PushSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.URLField(unique=True)),
                ('p256dh_key', models.TextField()),
                ('auth_key', models.TextField()),
                ('user_agent', models.TextField(blank=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('weather_alerts', models.BooleanField(default=True)),
                ('severe_weather_alerts', models.BooleanField(default=True)),
                ('daily_forecast', models.BooleanField(default=False)),
                ('location_updates', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'push_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('weather_alert', 'Weather Alert'), ('severe_weather', 'Severe Weather Alert'), ('daily_forecast', 'Daily Forecast'), ('location_update', 'Location Update'), ('system', 'System Notification'), ('test', 'Test Notification')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('data', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('failed', 'Failed'), ('expired', 'Expired Subscription'), ('disabled', 'Notifications Disabled')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to='weather_data.pushsubscription')),
            ],
            options={
                'db_table': 'notification_logs',
            },
        ),
        migrations.CreateModel(
            name='SystemAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('performance', 'Performance Issue'), ('error', 'System Error'), ('security', 'Security Alert'), ('capacity', 'Capacity Warning'), ('api_failure', 'API Failure'), ('database', 'Database Issue'), ('cache', 'Cache Issue'), ('disk_space', 'Disk Space Warning'), ('memory', 'Memory Warning'), ('custom', 'Custom Alert')], max_length=20)),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical'), ('emergency', 'Emergency')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('suppressed', 'Suppressed')], default='active', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('component', models.CharField(max_length=50)),
                ('metric_value', models.FloatField(blank=True, null=True)),
                ('threshold_value', models.FloatField(blank=True, null=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('notifications_sent', models.JSONField(blank=True, default=list)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'system_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealthCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('database', 'Database Health'), ('cache', 'Cache Health'), ('api_endpoints', 'API Endpoints'), ('external_apis', 'External APIs'), ('disk_space', 'Disk Space'), ('memory', 'Memory Usage'), ('cpu', 'CPU Usage'), ('services', 'Background Services'), ('ssl_certificates', 'SSL Certificates'), ('custom', 'Custom Check')], max_length=30)),
                ('check_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('healthy', 'Healthy'), ('warning', 'Warning'), ('unhealthy', 'Unhealthy'), ('unknown', 'Unknown')], max_length=20)),
                ('response_time', models.FloatField(blank=True, help_text='Response time in milliseconds', null=True)),
                ('error_message', models.TextField(blank=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'system_health_checks',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['check_type', 'timestamp'], name='system_heal_check_t_bd22b7_idx'), models.Index(fields=['status', 'timestamp'], name='system_heal_status_f0a1fb_idx'), models.Index(fields=['timestamp'], name='system_heal_timesta_e321c1_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('cpu_usage', 'CPU Usage'), ('memory_usage', 'Memory Usage'), ('disk_usage', 'Disk Usage'), ('database_connections', 'Database Connections'), ('cache_hit_rate', 'Cache Hit Rate'), ('response_time', 'Response Time'), ('error_rate', 'Error Rate'), ('active_users', 'Active Users'), ('api_requests', 'API Requests'), ('queue_size', 'Queue Size')], max_length=50)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('metric_unit', models.CharField(default='', max_length=20)),
                ('component', models.CharField(default='system', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'system_metrics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['metric_type', 'timestamp'], name='system_metr_metric__ef2754_idx'), models.Index(fields=['component', 'timestamp'], name='system_metr_compone_04109d_idx'), models.Index(fields=['timestamp'], name='system_metr_timesta_206ca6_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='pushsubscription',
            index=models.Index(fields=['user', 'is_active'], name='push_subscr_user_id_c81a15_idx'),
        ),
        migrations.AddIndex(
            model_name='pushsubscription',
            index=models.Index(fields=['endpoint'], name='push_subscr_endpoin_48e896_idx'),
        ),
        migrations.AddIndex(
            model_name='pushsubscription',
            index=models.Index(fields=['created_at'], name='push_subscr_created_217113_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['subscription', 'created_at'], name='notificatio_subscri_d0e3ae_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['notification_type', 'status'], name='notificatio_notific_250714_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['created_at'], name='notificatio_created_45a1e0_idx'),
        ),
        migrations.AddIndex(
            model_name='systemalert',
            index=models.Index(fields=['status', 'severity'], name='system_aler_status_3fb932_idx'),
        ),
        migrations.AddIndex(
            model_name='systemalert',
            index=models.Index(fields=['alert_type', 'created_at'], name='system_aler_alert_t_e26348_idx'),
        ),
        migrations.AddIndex(
            model_name='systemalert',
            index=models.Index(fields=['component', 'status'], name='system_aler_compone_753597_idx'),
        ),
        migrations.AddIndex(
            model_name='systemalert',
            index=models.Index(fields=['created_at'], name='system_aler_created_d6b03e_idx'),
        ),
    ]
